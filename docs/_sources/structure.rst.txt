.. title:: SPIF Structure


==========
Structure
==========

The SPIF file uses the `NetCDF4 format <https://www.unidata.ucar.edu/software/netcdf/>`_. NetCDF4 is a structured binary file format capable of containing large datasets and has automatic compression
utilities. NetCDF4 is widely supported on a variety of platforms and environments.

Data will be contained within **instrument groups** inside the SPIF file. Only data from a single instrument in contained in a single SPIF file however different instrument channels may be stored in different groups and so be kept together. Group attributes allow the specific instrument to be identified along with instrument hardware and software parameters.

In a similar fashion to the `CF (Climate and Forecast) Conventions <http://cfconventions.org/>`_, the SPIF conventions define a minimum structure, in terms of groups, variables, and attributes, for compliance. Any additional data contained within the file is optional but should not conflict with the standards. Any suggested but optional data for inclusion are given in *italics*. Due to the focussed type of data, SPIF conventions are more demanding of variable and attribute names than the CF conventions are. SPIF follows the CF `scoping guidelines <http://cfconventions.org/Data/cf-conventions/cf-conventions-1.8/cf-conventions.html#groups>`_ in that dimensions are visible to all child groups.


====================
SPIF File Definition
====================

The SPIF group structure is below with optional groups shown in *italics*

    |   root
    |   │
    |   ├── instrument 1
    |   │   ├── "core"
    |   │   ├── *"aux"*
    |   │   ├── *level-0*
    |   │   │   └── *level-1*
    |   │   └── *level-2*
    |   │
    |   ├── *instrument 2*
    |   :

The instrument group names are those of a specific instrument, further information is included as attributes of these groups. Contents of each of the groups is;


    `root`_
        The root of the SPIF file contains global attributes associated with the file.

    `instrument`_ group
        Each instrument data included within the file has a separate group. All metadata relevant to an instrument plus universal variables are included in the instrument root.

    `core`_
        The spif-core group contains the raw image data. Coordinate variable is ``image``.

    `aux`_
        The spif-aux group contains additional data which is generated by a given instrument but is not required for image processing. This data is included to maintain integrity of the original dataset, making SPIF a suitable format for long term archiving.

    `level-0 <level0>`_
        Particle information and derived parameters in units of ``pixels``/``slices``. Coordinate variable is ``particle``.

    level-1
        Particle information and derived parameters in physical units. Coordinate variable is ``particle``.

    level-2
        Higher-level, possibly aggregated, data products derived from ``level-1``. Coordinate variable is (probably) ``time``.


.. _root:

--------------------
SPIF Root Attributes
--------------------

Each SPIF file has a standardised set of attributes in the root. These attributes are;

    :Conventions: "SPIF-n.m"        (where n.m is the specification version)
    :title: Short description of dataset contents
    :institution: Where the data orginated
    :source: Name and version of software/hardware used to generate this dataset
    :history: Audit trail of file modifications
    :references: References of any documents describing the data and production of this dataset
    :comment: Any further information pertaining to this data

Any other attributes that apply to this dataset can be included in the root.


.. _instrument:

----------------
Instrument Group
----------------

The root of the instrument group contains attributes pertaining to that specific instrument. Instrument group attributes are currently not mandatory but may include;

    :instrument_name: Short name of instrument
    :instrument_long_name: Full descriptive name of instrument
    :instrument_channel: Instrument channel (if applicable)
    :institution: Institution operating instrument
    :references: Link to web, paper, document reference describing instrument
    :serial_number: Serial number or instrument identifier
    :manufacturer: Manufacturer of instrument
    :instrument_firmware: Instrument firmware version
    :instrument_software: Name and version of data acquisition software interfacing with instrument
    :instrument_wavelength: Wavelength of imaging laser
    :platform: Name or description of platform instrument is mounted on
    :raw_filenames: Raw data filename(s) used to generate the current instrument dataset
    :comment: Any further notes about instrument, platform, location, orientation, etc;

Universal variables may also be included in the instrument group root. For example;

    | *int* **pixel** (pixel)
    |  **pixel**:long\_name = "Vector of pixel numbers for instrument" ;

    | *int* **bit** (bit)
    |  **bit**:long\_name = "pixel bit" ;

    | *int* **value** (bit)
    |  **bit**:long_name = "Value of shadow level in image array" ;
    |  **bit**:ancillary\_variables = shadow;

    | *float* **shadow** (bit)
    |  **shadow**:long\_name = "Fractional obscuration of photodiode array for each bit value" ;

    | *float* **resolution**
    |  **resolution**:long\_name = "Physical resolution of array pixels instrument" ;
    |  **resolution**:units = "micrometer" ;
    |  **resolution**:ancillary_variables = instrument/resolution_err ;

    | *float* **clockstep**
    |  **resolution**:long\_name = "Temporal resolution of clock. Along with airspeed defines the physical resolution in the flight direction" ;
    |  **resolution**:units = "nanosecond" ;

    | *float* **arm\_separation**
    |  **arm\_separation**:long_name = "Physical distance between probe arms" ;
    |  **arm\_separation**:units = "micrometer" ;
    |  **arm\_separation**:ancillary_variables = instrument/arm\_separation\_err ;

    | *boolean* **antishatter_tips**
    |  **antishatter\_tips**:long\_name = "Use of antishatter-, or Korolev-, tips on probe arms" ;


.. _core:

Instrument Core Group
^^^^^^^^^^^^^^^^^^^^^

.. note::
    **Option 1** Image array is 2-dimensional with the unlimited dimension being ``time`` and the orthogonal dimension being ``pixel``. This most closely resembles the structure of an OAP image.

    :Advantages:
        Close to raw binary file format (?) and images as presented during data collection.
    :Disadvantages:
        Cannot be extended to different image types, eg 2d ccd images. `Time` is not a contiguous series.

The instrument ``core`` group contains the raw image data. Variables should exist for all of the information contained for each image in the source binary file. Thus this is a true raw dataset. The incrementing and unlimited dimension is ``time``. The units are in nanoseconds from the start time of the file, this is defined in the ``time:units`` attribute using the CF format. The ``array`` dimension corresponds to the image dimension along the diode array, and is set as the number of diodes of the instrument.

Variables in the ``core`` group are;

    | *float* **time** (time)
    |  **time**:standard_name = "time" ;
    |  **time**:timezone = "UTC" ;
    |  **time**:long_name = "image arrival time in nanoseconds from start time" ;
    |  **time**:units = "nanoseconds since <start_datetime>" ;

    | *int* **images** (time, pixel)
    |  **images**:long\_name = "image array" ;


.. note::
    **Option 2** Here the 2-dim is split into individual images and so is effectively the inverse operation that the probe hardware performs when is squishes particle images together. The image array is 3-dimensional with the ``image`` dimension being unlimited dimension and a counter.

    :Advantages:
        Format can be (more) easily extended to instruments that use a 2-dim imaging array.
    :Disadvantages:
        Issues of padding in the ``slice`` dimension as this need to be set to the largest possible (?) size. Change in format from 'native' image format(?).

The instrument ``core`` group contains the raw image data. Variables should exist for all of the information contained for each image in the source binary file. Thus this is a true raw dataset. The incrementing dimension is ``image``. The start time for the *nth* image is given by the sum of ``particle_sec``(*n*) and ``particle_ns``(*n*). The 2-dimensional images have additional dimensions ``slice`` and ``array``. The ``slice`` dimension corresponds to the image dimension in the direction of flight and is set as the maximum number of slices encountered (or allowed) by the instrument. The ``array`` dimension corresponds to the image dimension along the diode array, and is set as the number of diodes of the instrument.

Variables in the ``core`` group are;

    | *int* **image** (image)
    |  **image**:long\_name = "Index of image" ;

    | *int* **image\_sec** (image)
    |  **image\_sec**:standard_name = "time" ;
    |  **image\_sec**:long\_name = "image arrival time in seconds" ;
    |  **image\_sec**:timezone = "UTC" ;
    |  **image\_sec**:units = "seconds since "... ;

    | *float* **image\_ns** (image)
    |  **image\_ns**:long_name = "image arrival time in nanoseconds from corresponding image_sec" ;
    |  **image\_ns**:units = "nanoseconds" ;
    |  **image\_ns**:ancillary\_variables = instrument/core/image\_sec ;

    | *float* **image_len** (image)
    |  **image\_len**:long\_name = "image event length in number of slices" ;
    |  **image\_len**:units = "dimensionless" ;

    | *int* **images** (image, slice, pixel)
    |  **images**:long\_name = "image array" ;



.. _aux:

Auxillary Data Group
^^^^^^^^^^^^^^^^^^^^

.. note:: The ``aux`` group is an optional SPIF feature.

The instrument ``aux`` group contains auxiliary data relevant to a given instrument. This data may be included to maintain integrity of the original dataset, making SPIF a suitable format for long term archiving. This group has its own ``time`` coordinate; this accommodates 1 Hz one dimensional data that may be transmitted in parallel to the two dimensional image data. The ``aux`` group is optional and may include useful data such as;

    * Housekeeping data
    * Buffer time stamps
    * Image counters
    * Data acquisition timing words
    * Temperature
    * Altitude


.. _level0:

Level-0 Processed Data Group
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. note:: The ``level-0`` group is an optional SPIF feature.

Following extraction of image data into SPIF format, images can be analyzed to extract information about the particles they contain. At the most basic level, parameters of interest describe geometric and physical measurements of the identified particles. Thus, the level 0 data contains basic information about identified particles such as;

    * Diameters (more discussion on this below)
    * Area
    * Perimeter
    * Bounding box within image
    * Orientation
    * Right edge pixel count
    * Left edge pixel count
    * Center-in (boolean)
    * All-in (boolean)

Note that the level 0 particles are sized using number of pixels - conversion to sizing in microns takes place in Level 1.


Diameter definitions:
"""""""""""""""""""""

    Interpretation of particle diameter presents a challenge, as there are currently several definitions of particle diameter in use by the community, and a standard definition likely isn’t reasonable, since different diameters are useful depending on the measurement scenario. Thus, to make SPIF useful to the broader community, it should include a wide set of diameters in use by the community. An additional consideration for the inclusion of various particle diameters is how these diameters are named. Throughout the literature, varying names have been given to essentially identical diameters. In the diameter definitions here, an attempt will be made to standardize the names, while referencing other names used for a given diameter definition.


Each of the parameters discussed above applies to individual particles. For most OAPs, there can be multiple particles in a single image. Given this n-to-one relationship, the Level 0 particle data will require use of a new dimension corresponding to the number of particles detected, which is likely to be different than the number of images captured. The particles dimension thus covers all parameters described in this section. With the additional dimension, there is a need for supplemental parameters which describe the relationship of detected particles to their original image, both in terms of a reference to the additional image, as well as a more exact temporal location, based on the particle’s location in the image frame.

etc etc...