.. title:: SPIF Overview

==========
Motivation
==========

A variety of file formats are used by particle imaging instrument manufacturers. The formats are dictated by hardware and bandwidth limitations, and so may not have a convenient or conventional structure. However, after data has been acquired, and as hardware improves, the imposed limitations vanish. We propose a new file format for these imaging probes called the Single Particle Image Format (SPIF). The new format will specify a single structure which all imaging probe data formats may be mapped onto, leading to improved accessibility for users and refinement of data processing routines. It may be that this format could be adopted by instrument manufacturers. The format is also suitable for representing historical datasets and for long-term archiving of raw data. File converters for some of the most commonly used probes are provided.

==========
Structure
==========

SPIF files are based on the `Hierarchical Data Format (HDF5) <https://www.hdfgroup.org/HDF5/>`_. HDF5 is a structured binary file format capable of containing large datasets and has automatic compression utilities. HDF5 is widely supported on a variety of platforms and environments and SPIF files will thus also be.

spif.py and associated code produces instances of a Spif class, such objects have the same structure as the h5 spif file that is written from this instance. Thus discussion of structure applies equally to class instances and produced h5 files.

Datasets will be contained in groups within a SPIF file. Only data from a single instrument may be stored in a given group although SPIF files can contain data from multiple instruments through the use of multiple groups.
Metadata will be provided for each instrument to provide information on data sources etc. The structure of a SPIF file is as follows;


    root: The root of the file contains global attributes.

    :ref:`instrument group <instr_grp>`: Each instrument data included within the file has a seperate group.

        root: Instrument metadata

        :ref:`core <instr_core>`: The SPIF-Core group contains the data necessary for subsequent analysis.

        :ref:`aux <instr_auxillary>`: The SPIF-Aux group contains additional data which is generated by a given instrument, but is not essential for data processing. This data is included to maintain integrity of the original dataset, making SPIF a suitable format for long term archiving.

        :ref:`lvlX <instr_processed>` Processed data may be included as a subgroup of either ``core`` or ``aux`` or as individual variables within the same group but with an appropriate *X* ``level`` attribute.


--------------------
SPIF Core Attributes
--------------------

Each SPIF object, be it python instance or file, has a standardised set of attributes in the root. These attributes are;

    title: 'SPIF-Single Particle Image Format'

    institution: 'SPIF Working Group'

    source: 'spif.py'

    references: This webpage

    history: Series of datetime strings of updates

    comment: Series of update comments, one for each datetime string. Read from changelog.

    spif_version: spif.py version number

    hdf5_version: hdf5 version number

    h5py_version: h5py version number

    python_version: Python version number


.. default_spif_attrib = {
..     'title': 'SPIF-Single Particle Image Format',
..     'institution': 'SPIF Working Group',
..     'source': 'spif.py',
..     'references': '../docs/SPIF_definition.pdf',
..     'history': datetime.datetime.strftime(datetime.datetime.now(tz=pytz.utc),
..                                           '%Y-%m-%dT%H:%M%z'),
..     # NOTE: pytz probably not the best way to include tz info, ok for UTC.
..     # for v3.6 can use datetime.datetime.isoformat(x,timespec='minutes')
..     'comment': '{t}: {c}'.format(
..              t=datetime.datetime.strftime(datetime.datetime.now(tz=pytz.utc),
..                                         '%Y-%m-%dT%H:%M%z'),
..              c='initial implementation'),
..     # Implement this by reading a file changelog
..     'spif_version': spif_version,
..     'hdf5_version': h5py.version.hdf5_version,
..     'h5py_version': h5py.version.version,
..     'python_version': '{0}.{1}.{2}-{3}'.format(sys.version_info.major,
..                                                sys.version_info.minor,
..                                                sys.version_info.micro,
..                                                sys.version_info.releaselevel),
..     'project': '',      # ??
..     'start_date': ''}   # ??




----------------
Instrument Group
----------------
.. _instr_grp:

The root of the instrument group contains information pertaining to the individual instrument. It may also include information about the probe software module that was used to create it, this may be different to the version of the overall processing code. Instrument group attributes are currently not mandatory but may include;

    instrument_long_name: 'Cloud Imaging Probe - Grayscale',

    institution: 'Facility for Airborne Atmospheric Research (FAAM)',

    reference: 'http://dropletmeasurement.com/products/airborne/CIP',

    instrument_serial_number: '0302-02',

    manufacturer: 'Droplet Measurement Technologies',

    instrument_firmware: '0.0',

    instrument_software: '3.9.0',

    platform: 'FAAM BAe146',

    comment: 'CIP15-1 was mounted starboard upper-outer canister'


Instrument Core Group
^^^^^^^^^^^^^^^^^^^^^
.. _instr_core:

The Instrument Core group contains data necessary for analysis and processing of the raw data. There is a single coordinate for all variables in this group. This does mean that some of the arrays are larger than would otherwise be the case but it does mean that all the arrays are the same length which should make for more efficient storage and chunking. The coordinate is time, the length of ``particle_sec`` defines the length of the coordinate dimension, where the arrival time of the *n*\ th particle is given by ``particle_sec``\ (\ *n*\ ) + ``particle_nsec``\ (\ *n*\ ).

Some probes will have multiple channels, for example the 2DS has two orthogonal arms. Using a single coordinate for the group means that the time stamps of the two channels must be the same (is this always the case?). This will be fine for instruments with different polarisation-sensitive channels as well. Thus for a probe that is made up of multiple instruments, for example the 3V-CPI, where the particle detection will not be coincident, data will have to be split into different instrument groups.

There are several ways to hold data from multiple channels. One is to increase the depth of the data array to accommodate each additional channel. The other is to increase the number of variables. The former has the advantage of a consistant number of variable names in the group, the latter the advantage of simpler array structures which may be more convenient for probe data that is already complicated. The variables described here assume the former structure.



Auxillary Data Group
^^^^^^^^^^^^^^^^^^^^
.. _instr_auxillary:

The Instrument Aux group contains auxillary data which is generated by a given instrument, but is not essential for data processing. This data is included to maintain integrity of the original dataset, making SPIF a suitable format for long term archiving. This group has its own time coordinate, this accommodates 1~Hz one dimensional data that may be transmitted in parallel to the two dimensional image data.


Processed Data Group
^^^^^^^^^^^^^^^^^^^^
.. _instr_processed:

It may be desirable to include some processed data along with the unadulterated raw particle data. These variables should include an ``level`` attribute to indicate the appropriate processing level applied;

    level 0: Raw, or pixel, units

    level 1: Geophysical units
    
    level 2: Bulk properties in geophysical units?

The variables could be included in a subgroup of the Instrument core or aux groups. Where it is placed will depend on the appropriate coordinate time. For example, level 0 data could be placed within the core group as these variables will use the same nanosecond and seconds time coordinates as the raw single particle data. Level 2 data such as total concentration and median volume diameter will use the same time coordinates as probe air speed data so would probably be put in a subgroup of the aux group.
