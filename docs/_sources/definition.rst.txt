.. title:: SPIF Definition

====================
SPIF File Definition
====================

The SPIF group structure is below with optional groups shown in *italics*

    |   root
    |   │
    |   ├── instrument 1
    |   │   ├── "core"
    |   │   ├── *"aux"*
    |   │   ├── *level-0*
    |   │   │   └── *level-1*
    |   │   └── *level-2*
    |   │
    |   ├── *instrument 2*
    |   :


Contents of a SPIF file are;


    `root`_
        The root of the SPIF file contains global attributes associated with the file.

    `instrument`_ group
        Data from each instrument channel data is included within a separate group. All metadata relevant to an instrument channel plus universal variables are included in the ``instrument`` root. Many instruments will only have a single channel but in all cases the ``instrument`` group exists to maintain a consistant structure.

    `core`_
        The spif-core group contains the raw image data. Coordinate variables are ``image_num`` and ``pixel``.

    `aux`_
        The spif-aux group contains additional data which is generated by a given instrument but is not required for image processing. This data is included to maintain integrity of the original dataset, making SPIF a suitable format for long term archiving.

    `level-0 <level0>`_
        Particle information and derived parameters in units of ``pixels``/``slices``. Coordinate variable is ``particle``.

    level-1
        Particle information and derived parameters in physical units. Coordinate variable is ``particle``.

    level-2
        Higher-level, possibly aggregated, data products derived from ``level-1``. Coordinate variable is (probably) ``time``.


.. _root:

--------------------
SPIF Root Attributes
--------------------

Each SPIF file has a standardised set of attributes in the root. These attributes are;

    :Conventions: "SPIF-n.m"        (where n.m is the specification version)
    :title: Short description of dataset contents
    :institution: Where the data orginated
    :source: Name and version of software/hardware used to generate this dataset
    :history: Audit trail of file modifications
    :references: References of any documents describing the data and production of this dataset
    :comment: Any further information pertaining to this data

Any other attributes that apply to this dataset can be included in the root.


.. _instrument:

------------------------
Instrument Channel Group
------------------------

The root of the instrument channel group contains attributes pertaining to that specific instrument/channel. It may also include information about the probe software module that was used to create the file.

Instrument group attributes are currently not mandatory but may include;

    :instrument_name: Short name of instrument
    :instrument_long_name: Full descriptive name of instrument
    :instrument_channel: Instrument channel (if applicable)
    :instrument_serial_number: Serial number or instrument identifier
    :manufacturer: Manufacturer of instrument
    :instrument_firmware: Instrument firmware version
    :instrument_software: Name and version of data acquisition software interfacing with instrument
    :institution: Institution operating instrument
    :platform: Name or description of platform instrument is mounted on
    :raw_filenames: Raw data filename(s) used to generate the current instrument dataset
    :references: Link to web, paper, document reference describing instrument
    :comment: Any further notes about instrument, platform, location, orientation, etc;

Universal variables may also be included in the instrument group root. For example;

Dimensions:
"""""""""""
    | pixel
    | bit

Variables:
""""""""""

    | *int* **value** (bit)
    |  **bit**:long_name = "Value of shadow level in image array" ;
    |  **bit**:ancillary\_variables = shadow;

    | *float* **shadow** (bit)
    |  **shadow**:long\_name = "Fractional obscuration of photodiode array for each bit value" ;

    | *float* **start\_time**
    |  **start\_time**:long\_name = "Reference datetime of image data" ;
    |  **start\_time**:units = "seconds since <reference datetime>" ;

    | *float* **resolution**
    |  **resolution**:long\_name = "Physical resolution of array pixels" ;
    |  **resolution**:units = "micrometer" ;
    |  **resolution**:ancillary_variables = instrument/resolution_err ;

    | *float* **resolution_err**
    |  **resolution_err**:long\_name = "Uncertainty of physical resolution of array pixels" ;
    |  **resolution_err**:units = "micrometer" ;

    | *float* **array\_rate**
    |  **array\_rate**:long\_name = "Temporal clocking rate of imaging array. If an OAP then this, along with airspeed, defines the physical resolution in the flight direction. If 2d image then defines maximum frame rate." ;
    |  **array\_rate**:units = "hertz" ;

    | *int* **array\_size**
    |  **array\_size**:long\_name = "Number of pixels across the imaging array, may be 1d or 2d." ;

    | *int* **image\_size**
    |  **image\_size**:long\_name = "Number of pixels across an image, may be 1d or 2d. If fixed size then number of pixels, if variable size then _FillValue" ;
    |  **image\_size**:_FillValue = 0 ;

    | *float* **wavelength**
    |  **wavelength**:long\_name = "Operating wavelength of laser used for shadowing/imaging the particles" ;
    |  **wavelength**:units = "nanometer" ;

    | *float* **arm\_separation**
    |  **arm\_separation**:long_name = "Physical distance between probe arms" ;
    |  **arm\_separation**:units = "millimeter" ;

    | *boolean* **antishatter_tips**
    |  **antishatter\_tips**:long\_name = "Use of antishatter-, or Korolev-, tips on probe arms" ;


.. _core:

Instrument Core Group
^^^^^^^^^^^^^^^^^^^^^

.. TODO::
    Should this ``core`` group exist or just have all the raw data in the ``instrument`` group root?

The instrument ``core`` group contains the raw image data. Variables should exist for all of the information contained for each image in the source binary file. Thus this is a true raw dataset. The unlimited dimensions are ``image_num`` and ``pixel`` where ``max(image_num)`` is the number of images in the dataset and ``max(pixel)`` is the total number of pixels of data in the flattened image array.

.. Note::
    Each image may in fact contain multiple particles. As the ``core`` group is entirely raw data, there has been no processing to split out the multiple particles from a single image.

The arrival time of each image is given by ``time``. The units are in nanoseconds from the reference ``start\_time``, this is defined in the ``time:units`` attribute using the CF format.

Variables in the ``core`` group include;

Dimensions:
"""""""""""
    | image_num

Variables:
""""""""""
    | *int* **image** (pixel)
    |  **image**:long\_name = "Flattened 1d array of images" ;

    | *float* **timestamp** (image_num)
    |  **time**:standard_name = "time" ;
    |  **time**:timezone = "UTC" ;
    |  **time**:long_name = "image arrival time in nanoseconds from reference start time" ;
    |  **time**:units = "nanoseconds since <start_time>" ;
    |  **time**:ancillary_variables = instrument/start_time ;

    | *int* **startpixel** (image_num)
    |  **startpixel**:long\_name = "Array index of first image slice" ;

    | *int* **width** (image_num)
    |  **width**:long\_name = "Number of pixels across image" ;
    |  **width**:units = "pixels" ;

    | *int* **height** (image_num)
    |  **height**:long\_name = "Number of slices/lines in image" ;
    |  **height**:units = "lines" ;

    | *int* **overload** (image_num)
    |  **overload**:long\_name = "Data quality flag for each image" ;
    |  **overload**:flag_values = "0, 1" ;
    |  **overload**:flag_meanings, "good bad" ;


.. admonition:: A word on data types

    The above dtypes are given in the broadest terms as the definitions do not *require* a specific type of *integer* or *float*. However, significant savings in terms of file size and memory usage can be made by using the following dtypes (given in terms of `netCDF <http://unidata.github.io/netcdf4-python/#variables-in-a-netcdf-file>`_ and `numpy <https://numpy.org/doc/stable/reference/arrays.scalars.html>`_ dtypes);

       | **image**: 'u1' or np.uint8
       | **timestamp**: 'f4' or np.float32
       | **startpixel**: 'u8' or np.uint64
       | **width**: 'u4' or np.uint32
       | **height**: 'u4' or np.uint32
       | **flag**: 'u1' or np.uint8


.. _aux:

Auxillary Data Group
^^^^^^^^^^^^^^^^^^^^

.. note:: The ``aux`` group is an optional SPIF feature.

The instrument ``aux`` group contains auxiliary data relevant to a given instrument. This data may be included to maintain integrity of the original dataset, making SPIF a suitable format for long term archiving. This group has its own ``time`` coordinate; this accommodates 1 Hz one dimensional data that may be transmitted in parallel to the two dimensional image data. The ``aux`` group is optional and may include useful data such as;

    * Housekeeping data
    * Buffer time stamps
    * Image counters
    * Data acquisition timing words
    * Temperature
    * Altitude


.. _level0:

Level-0 Processed Data Group
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. note:: The ``level-0`` group is an optional SPIF feature.

Following extraction of image data into SPIF format, images can be analyzed to extract information about the particles they contain. At the most basic level, parameters of interest describe geometric and physical measurements of the identified particles. Thus, the level 0 data contains basic information about identified particles such as;

    * Diameters (more discussion on this below)
    * Area
    * Perimeter
    * Bounding box within image
    * Orientation
    * Right edge pixel count
    * Left edge pixel count
    * Center-in (boolean)
    * All-in (boolean)

Note that the level 0 particles are sized using number of pixels - conversion to sizing in microns takes place in Level 1.


Diameter definitions:
"""""""""""""""""""""

    Interpretation of particle diameter presents a challenge, as there are currently several definitions of particle diameter in use by the community, and a standard definition likely isn’t reasonable, since different diameters are useful depending on the measurement scenario. Thus, to make SPIF useful to the broader community, it should include a wide set of diameters in use by the community. An additional consideration for the inclusion of various particle diameters is how these diameters are named. Throughout the literature, varying names have been given to essentially identical diameters. In the diameter definitions here, an attempt will be made to standardize the names, while referencing other names used for a given diameter definition.


Each of the parameters discussed above applies to individual particles. For most OAPs, there can be multiple particles in a single image. Given this n-to-one relationship, the Level 0 particle data will require use of a new dimension corresponding to the number of particles detected, which is likely to be different than the number of images captured. The particles dimension thus covers all parameters described in this section. With the additional dimension, there is a need for supplemental parameters which describe the relationship of detected particles to their original image, both in terms of a reference to the additional image, as well as a more exact temporal location, based on the particle’s location in the image frame.

etc etc...